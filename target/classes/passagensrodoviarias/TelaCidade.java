/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package passagensrodoviarias;

import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gabri
 */
public class TelaCidade extends javax.swing.JFrame {

    /**
     * Creates new form TelaCidade
     */
    
    private static final String URL = "jdbc:mysql://localhost:3306/passagens";
    private static final String USER = "root";
    private static final String PASSWORD = "password";
    
    public TelaCidade() {
        initComponents();
        
        carregarDadosTabela();
        setTitle("INFORMAÇÕES DOS ÔNIBUS");
        setSize(1280, 860);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    
    private void carregarDadosTabela() {
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD)) {
            String sql = "SELECT nome_cidade, sigla_ibge, uf FROM cidades";
         
            try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
            
                try (ResultSet rs = pstmt.executeQuery()) {
                    DefaultTableModel model = (DefaultTableModel) tableCidades.getModel();
                    model.setRowCount(0);
                    while (rs.next()) {
                        Object[] rowData = {rs.getString("nome_cidade"), rs.getString("sigla_ibge"), rs.getString("uf")};
                        model.addRow(rowData);
                    }
                    // Jogar dados da celula qtd poltronas para esquerda.
//                    tableCidades.getColumnModel().getColumn(3).setCellRenderer(new DefaultTableCellRenderer() {
//                        {
//                            setHorizontalAlignment(SwingConstants.LEFT);
//                        }
//                    });
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar dados da tabela: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void atualizarTabelaCidade() {
        DefaultTableModel model = (DefaultTableModel) tableCidades.getModel();
        model.setRowCount(0);

        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD)) {
            String sql = "SELECT nome_cidade, sigla_ibge, uf FROM cidades";
            try (PreparedStatement pstmt = conn.prepareStatement(sql);
                 ResultSet rs = pstmt.executeQuery()) {
                
                while (rs.next()) {
                    model.addRow(new Object[]{rs.getString("nome_cidade"), rs.getString("sigla_ibge"),
                            rs.getString("uf")});
                }
            }
        } catch (SQLException ex) {
            System.out.println("Erro ao atualizar tabela de cidades: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel = new javax.swing.JPanel();
        tituloEmpresa = new javax.swing.JLabel();
        tituloTela = new javax.swing.JLabel();
        cidade = new javax.swing.JLabel();
        campoCidade = new javax.swing.JTextField();
        sigla = new javax.swing.JLabel();
        campoSigla = new javax.swing.JTextField();
        uf = new javax.swing.JLabel();
        campoUf = new javax.swing.JTextField();
        btConsultar = new javax.swing.JButton();
        btAdicionar = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        tabelaConsultas = new javax.swing.JScrollPane();
        tableCidades = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painel.setBackground(new java.awt.Color(51, 0, 204));
        painel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tituloEmpresa.setFont(new java.awt.Font("Liberation Sans", 1, 64)); // NOI18N
        tituloEmpresa.setForeground(new java.awt.Color(255, 255, 255));
        tituloEmpresa.setText("CROSSBUS");
        painel.add(tituloEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        tituloTela.setFont(new java.awt.Font("Segoe UI Black", 0, 64)); // NOI18N
        tituloTela.setForeground(new java.awt.Color(255, 255, 255));
        tituloTela.setText("CIDADES");
        painel.add(tituloTela, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 30, -1, -1));

        cidade.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cidade.setForeground(new java.awt.Color(255, 255, 255));
        cidade.setText("Cidade");
        painel.add(cidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, -1, -1));

        campoCidade.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        campoCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCidadeActionPerformed(evt);
            }
        });
        painel.add(campoCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, 270, -1));

        sigla.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        sigla.setForeground(new java.awt.Color(255, 255, 255));
        sigla.setText("Sigla");
        painel.add(sigla, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 240, -1, -1));

        campoSigla.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        campoSigla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoSiglaActionPerformed(evt);
            }
        });
        painel.add(campoSigla, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 240, 130, -1));

        uf.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        uf.setForeground(new java.awt.Color(255, 255, 255));
        uf.setText("UF");
        painel.add(uf, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 240, -1, -1));
        painel.add(campoUf, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 240, 70, 40));

        btConsultar.setText("Consultar");
        btConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarActionPerformed(evt);
            }
        });
        painel.add(btConsultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 240, 110, 40));

        btAdicionar.setText("Adicionar");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });
        painel.add(btAdicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 400, 110, 40));

        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });
        painel.add(btAtualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 510, 110, 40));

        btExcluir.setText("Excluir cidade");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });
        painel.add(btExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 630, 110, 40));

        btVoltar.setText("Voltar");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });
        painel.add(btVoltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 750, 110, 40));

        tableCidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cidade", "Sigla", "UF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableCidades.setColumnSelectionAllowed(true);
        tableCidades.getTableHeader().setReorderingAllowed(false);
        tabelaConsultas.setViewportView(tableCidades);
        tableCidades.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        painel.add(tabelaConsultas, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 780, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarActionPerformed
        String cidade = campoCidade.getText().trim();
        String sigla = campoSigla.getText().trim();
        String uf = campoUf.getText().trim();

        StringBuilder sqlBuilder = new StringBuilder();
        sqlBuilder.append("SELECT nome_cidade, sigla_ibge, uf FROM cidades WHERE 1=1");
        List<Object> params = new ArrayList<>();
        
        if (!cidade.isEmpty()) {
            sqlBuilder.append(" AND nome_cidade LIKE ?");
            params.add("%" + cidade + "%"); // Adiciona o caractere '%' para pesquisar por substrings
        }
        if (!sigla.isEmpty()) {
            sqlBuilder.append(" AND sigla_ibge LIKE ?");
            params.add("%" + sigla + "%");
        }
        if (!uf.isEmpty()) {
            sqlBuilder.append(" AND uf LIKE ?");
            params.add("%" + uf + "%");
        }
        
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD)) {
            try (PreparedStatement pstmt = conn.prepareStatement(sqlBuilder.toString())) {
                
                for (int i = 0; i < params.size(); i++) {
                    pstmt.setObject(i + 1, params.get(i));
                }
            
                try (ResultSet rs = pstmt.executeQuery()) {
                    DefaultTableModel model = (DefaultTableModel) tableCidades.getModel();
                    model.setRowCount(0);
                    while (rs.next()) {
                        Object[] rowData = {rs.getString("nome_cidade"), rs.getString("sigla_ibge"), rs.getString("uf")};
                        model.addRow(rowData);
                    }
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao executar consulta: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
   
    }//GEN-LAST:event_btConsultarActionPerformed

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed

        CadastrarCidade cadastrarCidade = new CadastrarCidade();
        cadastrarCidade.setVisible(true);

    }//GEN-LAST:event_btAdicionarActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
      atualizarTabelaCidade();
    }//GEN-LAST:event_btAtualizarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        excluirDados();
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btVoltarActionPerformed

    private void campoCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCidadeActionPerformed

    }//GEN-LAST:event_campoCidadeActionPerformed

    private void campoSiglaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoSiglaActionPerformed

    }//GEN-LAST:event_campoSiglaActionPerformed

    private int getLinhaSelecionada() {
        return tableCidades.getSelectedRow();
    }
    
    private void excluirDados() {
        int linhaSelecionada = getLinhaSelecionada();
        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(this, "Nenhuma linha selecionada.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Confirmar exclusão com o usuário
        int resposta = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir esta cidade?", "Confirmação", JOptionPane.YES_NO_OPTION);
        if (resposta != JOptionPane.YES_OPTION) {
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableCidades.getModel();
        String cidade = (String) model.getValueAt(linhaSelecionada, 0);

        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD)) {
            String sql = "DELETE FROM cidades WHERE nome_cidade = ?";

            try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
                pstmt.setString(1, cidade);

                int rowsAffected = pstmt.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Dados excluídos com sucesso.");
                    carregarDadosTabela();
                } else {
                    JOptionPane.showMessageDialog(this, "Nenhum dado foi excluído.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao excluir dados: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCidade().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btConsultar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btVoltar;
    private javax.swing.JTextField campoCidade;
    private javax.swing.JTextField campoSigla;
    private javax.swing.JTextField campoUf;
    private javax.swing.JLabel cidade;
    private javax.swing.JPanel painel;
    private javax.swing.JLabel sigla;
    private javax.swing.JScrollPane tabelaConsultas;
    private javax.swing.JTable tableCidades;
    private javax.swing.JLabel tituloEmpresa;
    private javax.swing.JLabel tituloTela;
    private javax.swing.JLabel uf;
    // End of variables declaration//GEN-END:variables
}
